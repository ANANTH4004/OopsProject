                   Student Class

 public class Student : IFileOperaions
    {
		private string _StudentName;

		public string StudentName
		{
			get { return _StudentName; }
			set { _StudentName = value; }
		}

		private int _Class;

		public int Class
		{
			get { return _Class; }
			set { _Class = value; }
		}
		//private char _Section;

		//public char Section
		//{
		//	get { return _Section; }
		//	set { _Section = value; }
		//}
		public static List<Student> StudentList = new List<Student>();
		public void PrintData()
		{
			foreach (var item in StudentList)
			{
				Console.WriteLine($"Student Name : {item.StudentName}  Class : {item.Class}");
			}
			Console.WriteLine("========================================");
		}
		public void FileWrite()
		{
			FileStream fs = new FileStream("Student.txt", FileMode.Append, FileAccess.Write);
			StreamWriter sr = null;
			try
			{
				sr = new StreamWriter(fs);
				Console.WriteLine("Enter Student Name :");
				string name = Console.ReadLine();
				Console.WriteLine("Enter Class :" );
				string Class = Console.ReadLine();
				sr.WriteLine(name + "-" + Class);
            }
			finally
			{
				sr.Close();
				fs.Close();
				
			}
		}
        public void FileRead()
        {
            FileStream fs1 = new FileStream("Student.txt", FileMode.Open, FileAccess.Read);
            StreamReader sr = null;

            try
            {
                sr = new StreamReader(fs1);
                bool LastLine = false;
                while (!LastLine)
                {
                    Student s = new Student();
                    String temp = sr.ReadLine();
                    if (temp == null)
                    {
                        Console.WriteLine("Last Data reached...");
                        break;
                    }
                    s.StudentName = temp.Split('-')[0];
                    s.Class = Convert.ToInt32(temp.Split('-')[1]);
                    Student.StudentList.Add(s);
                }

            }
            catch (Exception ex)
            {
                Console.WriteLine("Error Message form Student = " + ex.Message);

            }
            finally
            {
                sr.Close();
                fs1.Close();

            }
        }
		public void SearchStudent()
		{
            Console.WriteLine("Enter a student name: ");
            string name = Console.ReadLine();
            var Details = File.ReadLines("Student.txt").OrderBy((line => (line.Split('-')[1])))
                 .ToList();
            bool found = false;
            foreach (var item in Details)
            {
                
                if (item.Contains(name))
                {
                    Console.WriteLine($"Name: {item.Split('-')[0]} \nClass Room  : {item.Split('-')[1]} ");
                    found = true;
                    
                }
            }
            if (!found)
            {
                Console.WriteLine("Student Not found or student not in the list please enter a valid Student Name");
            }
        
    } 


                        TEACHER CLASS 

public class Teacher : IFileOperaions
    {
		private string _TeacherName;

		public string TeacherName
		{
			get { return _TeacherName; }
			set { _TeacherName = value; }
		}
		private int _Class;

		public int Class
		{
			get { return _Class; }
			set { _Class = value; }
		}
		private string _Subject;

		public string Subject
		{
			get { return _Subject; }
			set { _Subject = value; }
		}
		public static List<Teacher> TeacherList = new List<Teacher>();

        public void PrintData()
        {
            foreach (var item in TeacherList)
            {
				Console.WriteLine("Teacher Name :" + item.TeacherName + "  Subject : " + item.Subject);
            }
			Console.WriteLine("========================================");
        }
        public void FileWrite()
        {
            FileStream fs = new FileStream("Teacher.txt", FileMode.Append, FileAccess.Write);
            StreamWriter sr = null;
            try
            {
                sr = new StreamWriter(fs);
                Console.WriteLine("Enter Teacher Name :");
                string name = Console.ReadLine();
                Console.WriteLine("Enter Class");
                string Class = Console.ReadLine();

                Console.WriteLine("Enter Subject :");
                string SubjectName = Console.ReadLine();
                sr.WriteLine(name +"-" + Class + "-" + SubjectName);
            }
            finally
            {
                sr.Close();
                fs.Close();
            }
        }
        public void FileRead()
        {
            FileStream fs2 = new FileStream("Teacher.txt", FileMode.Open, FileAccess.Read);
            StreamReader swt = null;
            try
            {
                swt = new StreamReader(fs2);
                bool LastLine = false;
                while (!LastLine)
                {
                    Teacher s = new Teacher();
                    String temp = swt.ReadLine();
                    if (temp == null)
                    {
                        Console.WriteLine("Last Data reached...");
                        break;
                    }
                    var tempfile = temp.Split('-');
                    s.TeacherName = tempfile[0];
                    s.Class = Convert.ToInt32(tempfile[1]);
                    s.Subject = tempfile[2];
                    Teacher.TeacherList.Add(s);
                }

            }
            catch (Exception wx)
            {

                Console.WriteLine("Error message from teacher : " + wx.Message);
            }
            finally
            {
                swt.Close();
                fs2.Close();
            }
        }
        public void SearchTeacher()
        {
            Console.WriteLine("Enter Teacher  Name: ");
            string name = Console.ReadLine();
            var Details = File.ReadLines("Teacher.txt").OrderBy((line => (line.Split('-')[1])))
                 .ToList();
            bool found = false;
            foreach (var item in Details)
            {

                if (item.Contains(name))
                {
                    Console.WriteLine($"Teacher Name: {item.Split('-')[0]} \nClass   : {item.Split('-')[1]} \nSubject : {item.Split('-')[2]}" );
                    found = true;

                }
            }
            if (!found)
            {
                Console.WriteLine("Teacher Not found  please enter a valid Teacher Name");
            }
        }


    }
                                SUBJECT CLASS

 public class Subject : IFileOperaions
    {
        public static List<Subject> SubjectList = new List<Subject>();
		
		public void PrintData()
		{
			foreach (var item in SubjectList)
			{
				Console.WriteLine("Subject Name : " + item.SubjectName + " Subject Code :" + item.SubCode);
			}
			Console.WriteLine("========================================");
		}
		private string _SubjectName;

		public string SubjectName
		{
			get { return _SubjectName; }
			set { _SubjectName = value; }
		}

		private int _SubCode;

		public int SubCode
		{
			get { return _SubCode; }
			set { _SubCode = value; }
		}
		public void FileRead()
		{
            FileStream fs3 = new FileStream("Subject.txt", FileMode.Open, FileAccess.Read);
            StreamReader ss = null;

            try
            {
                ss = new StreamReader(fs3);
                bool LastLine = false;
                while (!LastLine)
                {
                    Subject s = new Subject();
                    String temp = ss.ReadLine();
                    if (temp == null)
                    {
                        Console.WriteLine("Last Data reached...");
                        break;
                    }
                    s.SubjectName = temp.Split('-')[0];
                    s.SubCode = Convert.ToInt32(temp.Split('-')[1]);
                    Subject.SubjectList.Add(s);
                }

            }
            catch (Exception ex)
            {
                Console.WriteLine("Error Message = " + ex.Message);

            }
            finally
            {
                ss.Close();
                fs3.Close();

            }
        }

        public void FileWrite()
        {
            FileStream fs = new FileStream("Subject.txt", FileMode.Append, FileAccess.Write);
            StreamWriter sr = null;
            try
            {
                sr = new StreamWriter(fs);
                Console.WriteLine("Enter Subject Name :");
                string name = Console.ReadLine();
                Console.WriteLine("Enter Subject Code :");
                string Class = Console.ReadLine();
                sr.WriteLine(name + "-" + Class);
            }
            finally
            {
                sr.Close();
                fs.Close();

            }

        }

        public void SearchSubject()
        {
            Console.WriteLine("Enter Subject name: ");
            string name = Console.ReadLine();
            var Details = File.ReadLines("Subject.txt").OrderBy((line => (line.Split('-')[1])))
                 .ToList();
            bool found = false;
            foreach (var item in Details)
            {

                if (item.Contains(name))
                {
                    Console.WriteLine($" Subject Name: {item.Split('-')[0]} \nSubject Code  : {item.Split('-')[1]} ");
                    found = true;

                }
            }
            if (!found)
            {
                Console.WriteLine("Subject  Not found  please enter a valid Subject Name");
            }
        }
    }


                            IFILEOPERATIONS INTERFACE

 internal interface IFileOperaions
    {
        void FileRead();
        void FileWrite();
        void PrintData();
    }



                            Main Program

 internal class Program
    {
        static void Main(string[] args)
        {
            #region CreateFile
            //File.Create("Student.txt");
            //File.Create("Teacher.txt");
            //File.Create("Subject.txt"); 
            #endregion
            //Student s = new Student();
            //s.FileWrite();
            //s.FileRead();
            //s.PrintStudent();
            //Teacher t = new Teacher();
            //t.FileWrite();
            //t.FileRead();
            //t.ShowList();
            //Subject ss = new Subject();
            //ss.FileWrite();
            //ss.FileRead();
            //ss.PrintData();
            bool con;
            do
            {
                
                Console.WriteLine("1.Add 2.Print 3.Search");
                int choice = Convert.ToInt32(Console.ReadLine());
                switch (choice)
                {
                    case 1:
                        Console.WriteLine("1.Student 2.Teacher 3.Subject");
                        int ch1 = Convert.ToInt32(Console.ReadLine());
                        switch (ch1)
                        {
                            case 1:
                                Student s = new Student();
                                s.FileWrite();
                                break;
                            case 2:
                                Teacher t = new Teacher();
                                t.FileWrite();
                                break;
                            case 3:
                                Subject ss = new Subject();
                                ss.FileWrite();
                                break;
                            default:
                                break;
                        }
                        break;
                    case 2:
                        Console.WriteLine("1.Student 2.Teacher 3.Subject");
                        int ch2 = Convert.ToInt32(Console.ReadLine());
                        switch (ch2)
                        {
                            case 1:
                                Student s = new Student();
                                s.FileRead();
                                s.PrintData();
                                break;
                            case 2:
                                Teacher t = new Teacher();
                                t.FileRead();
                                t.PrintData();

                                break;
                            case 3:
                                Subject ss = new Subject();
                                ss.FileRead();
                                ss.PrintData();
                                break;
                            default:
                                break;
                        }
                        break;
                    case 3:
                        Console.WriteLine("1.Student 2.Teacher 3.Subject");
                        int ch3 = Convert.ToInt32(Console.ReadLine());
                        switch (ch3)
                        {
                            case 1:
                                Student s = new Student();
                                s.SearchStudent();
                                break;
                            case 2:
                                Teacher t = new Teacher();
                                t.SearchTeacher();

                                break;
                            case 3:
                                Subject ss = new Subject();
                                ss.SearchSubject();
                                break;
                            default:
                                break;
                        }
                        break;
                    default:
                    

                        break;
                }
                Console.WriteLine("Do you want to continue(Y/N) : ");
                string ans = Console.ReadLine();
                if(ans =="y" || ans == "Y")
                {
                    con = true;
                }else
                {
                    con = false;
                }
            } while (con);
        }
    }